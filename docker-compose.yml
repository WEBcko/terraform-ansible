services:
  frontend:
    image: erickojeda/front:latest
    pull_policy: always
    container_name: frontend
    ports:
      - "80:80"    
    networks:
      - front_network
    depends_on:
      backend:
        condition: service_healthy

  backend:
    image: erickojeda/back:latest
    pull_policy: always
    container_name: backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/blogdb
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - front_network
      - banco_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/user/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blogdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - banco_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 

networks:
  banco_network:
    driver: bridge
  front_network:
    driver: bridge
