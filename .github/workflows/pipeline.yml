name: Pipeline for Terraform and Ansible

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GCP credentials
        run: |
          mkdir -p /home/runner/gcp_credentials
          echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | base64 -d > /home/runner/gcp_credentials/credentials.json
          chmod 600 /home/runner/gcp_credentials/credentials.json

      - name: Gerar par de chaves SSH para acesso à VM
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -C "ci-terraform" -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub
          echo "Chave SSH gerada com sucesso"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Terraform destroy
        run: |
          cd terraform
          terraform destroy -auto-approve \
                -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
                -var "region=us-central" \
                -var "zone=us-central1-a" \
                -var "credentials_file_path=/home/runner/gcp_credentials/credentials.json" \
                -var "public_key_path=/home/runner/.ssh/id_rsa.pub" \
                -var "machine_type=e2-medium" \
                -var "image=ubuntu-os-cloud/ubuntu-2204-lts" \
                -var "disk_size=10"

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=planfile \
            -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "region=us-central \
            -var "zone=us-central1-a \
            -var "credentials_file_path=/home/runner/gcp_credentials/credentials.json" \
            -var "public_key_path=/home/runner/.ssh/id_rsa.pub" \
            -var "machine_type=e2-medium" \
            -var "image=ubuntu-os-cloud/ubuntu-2204-lts" \
            -var "disk_size=10"
          terraform destroy

      - name: Terraform Apply and export VM IP
        run: |
          cd terraform
          terraform apply -auto-approve planfile
          IP=$(terraform output -raw vm_ip | tr -d '\r')
          echo "VM_IP=$IP" >> $GITHUB_ENV
          echo "IP da VM: $IP"

      - name: Instalar Ansible e preparar acesso SSH
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y ansible sshpass
          echo "Adicionando $VM_IP ao known_hosts..."
          ssh-keyscan -H "$VM_IP" >> ~/.ssh/known_hosts || true

      - name: Executar Ansible Playbook diretamente com IP
        run: |
          cd ansible
          echo "Usando chave privada:"
          ls -l /home/runner/.ssh/id_rsa || echo "Chave não encontrada"
          echo "Conectando à VM $VM_IP"
      
          ansible-playbook playbook.yml \
            -i "$VM_IP," \
            -e ansible_user=ubuntu \
            -e ansible_ssh_private_key_file=/home/runner/.ssh/id_rsa \
            -vvvv
